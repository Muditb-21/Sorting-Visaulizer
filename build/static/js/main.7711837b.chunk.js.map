{"version":3,"sources":["images/logo.jpg","images/menu-outline.svg","components/Navbar.jsx","components/Sidebar.jsx","components/BubbleSort.jsx","components/InsertionSort.jsx","components/SelectionSort.jsx","components/MergeSort.jsx","components/QuickSort.jsx","components/HeapSort.jsx","components/SortingPage.jsx","components/HomePage.jsx","components/MainPage.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","React","createElement","className","src","logo","alt","onClick","document","querySelector","classList","toggle","menu","Sidebar","props","activeId","useRef","_useState","useState","current","_useState2","_slicedToArray","active","setActive","handleClick","event","selectedId","target","parentNode","tagName","id","handleActive","setPage","Link","to","concat","undefined","darkMode","rel","href","BubbleSort","InsertionSort","SelectionSort","MergeSort","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","SortingPage","array","setArray","_useState3","_useState4","arraySize","setArraySize","_useState5","_useState6","speed","setSpeed","sorting","sortingSpeed","maxHeight","sortingPageMainHeight","arrayContainerWidth","inputMaxvalue","resetBarColors","useCallback","arrayBars","getElementsByClassName","style","backgroundColor","barkMode","useEffect","buttonELe","page","innerHTML","handlestopSorting","resetArray","highlightSortedBubble","sortedIndex","highlightSortedInsertion","newArray","num","randomIntFromInterval","clientHeight","clientWidth","heightMulFactor","arrayBarWidth","min","max","Math","floor","random","bubbleSort","_asyncToGenerator","_callee","arr","n","j","temp","_context","_toConsumableArray","highlightBars","setTimeout","swapHeights","insertionSort","_callee2","_context2","moveBar","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","tempHeight","height","selectionSort","_callee3","minIndex","_context3","swap","mergeSort","_ref4","_callee6","merge","mergeSortRec","arrCopy","_context6","_ref5","_callee4","start","mid","end","leftArr","rightArr","k","_context4","_x2","_x3","_x4","_x5","apply","arguments","_ref6","_callee5","_context5","_x6","_x7","_x8","_x","quickSort","_callee9","partitionLomuto","sort","_context9","_ref8","_callee7","low","high","pivot","_ref9","_ref10","_context7","_x9","_x10","_x11","_ref11","_callee8","pi","_context8","_x12","_x13","_x14","heapSort","_callee12","heapify","buildHeap","_ref16","_context12","_ref13","_callee10","largest","left","right","_ref14","_context10","_x15","_x16","_x17","_ref15","_callee11","_context11","_x18","_x19","color","htmlFor","onChange","Number","map","index","width","QuickSort","HeapSort","HomePage","quesRef","pRef","observer","IntersectionObserver","entries","isIntersecting","add","remove","threshold","ques","observe","disconnect","ref","el","MainPage","Routes","Route","path","element","exact","App","isDarkMode","setIsDarkMode","ReactDOM","createRoot","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.7711837b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6d4c3cd0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/menu-outline.c64f9d2b.svg\";","import React from 'react';\nimport logo from '../images/logo.jpg';\nimport menu from '../images/menu-outline.svg';\nimport './Navbar.css';\n\nexport default function Navbar() {\n  function toggleMenu() {\n    document.querySelector('.sidebar').classList.toggle('show');\n  }\n  return (\n    <div className='navbar'>\n      <div className=\"logo\">\n        {/*==== Logo Here ====*/}\n        <img src={logo} alt=\"logo-img\" />\n      </div>\n      <div className=\"title\">\n        {/* ==== Title Here ==== */}\n        Sorting Visualizer\n      </div>\n      <div className=\"menu\">\n        {/* ==== Menu Here ==== */}\n        <div onClick={toggleMenu} className=\"button\">\n          <button className=\"menu-button\"><img src={menu} alt=\"menu-button\" /></button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useRef } from \"react\";\nimport \"./Sidebar.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Sidebar(props) {\n\n  const activeId = useRef('home');\n  const [active, setActive] = useState(activeId.current);\n  const handleActive = (event) => {\n    let selectedId;\n    if (event.target.parentNode.tagName === \"LI\") {\n      selectedId = event.target.parentNode.id;\n    } else {\n      selectedId = event.target.parentNode.parentNode.id;\n    }\n    activeId.current = selectedId;\n    setActive(activeId.current);\n  }\n  const handleClick = (event) => {\n    handleActive(event);\n    props.setPage(activeId.current);\n  };\n\n  return (\n    <div>\n      <nav className=\"sidebar\">\n        <div className=\"sidebar-content\">\n          <div className=\"top-content\">\n            <div className=\"content home-button\">\n              <Link to=\"/\">\n                <li onClick={handleClick} id=\"home\" className={`nav-link ${active === 'home' ? 'active' : ''}`}>\n                  <button>\n                    <i undefined=\"true\" className=\"bx bx-home-alt-2 icon\"></i>\n                    <span className=\"text nav-text\">Home</span>\n                  </button>\n                </li>\n              </Link>\n            </div>\n\n            <div className=\"side-heading\">Sorting Algorithms</div>\n            <ul className=\"sorting-algorithms content\">\n              <Link to=\"/sort\"><li onClick={handleClick} id=\"bubble-sort\" className={`nav-link ${active === 'bubble-sort' ? 'active' : ''}`}>\n                <button>\n                  <i undefined=\"true\" className=\"bx bx-chevron-right icon\"></i>\n                  <span className=\"text nav-text\">Bubble Sort</span>\n                </button>\n              </li></Link>\n              <Link to=\"/sort\"><li onClick={handleClick} id=\"insertion-sort\" className={`nav-link ${active === 'insertion-sort' ? 'active' : ''}`}>\n                <button>\n                  <i undefined=\"true\" className=\"bx bx-chevron-right icon\"></i>\n                  <span className=\"text nav-text\">Insertion Sort</span>\n                </button>\n              </li></Link>\n              <Link to=\"/sort\"><li onClick={handleClick} id=\"merge-sort\" className={`nav-link ${active === 'merge-sort' ? 'active' : ''}`}>\n                <button>\n                  <i undefined=\"true\" className=\"bx bx-chevron-right icon\"></i>\n                  <span className=\"text nav-text\">Merge Sort</span>\n                </button>\n              </li></Link>\n              <Link to=\"/sort\"><li onClick={handleClick} id=\"selection-sort\" className={`nav-link ${active === 'selection-sort' ? 'active' : ''}`}>\n                <button>\n                  <i undefined=\"true\" className=\"bx bx-chevron-right icon\"></i>\n                  <span className=\"text nav-text\">Selection Sort</span>\n                </button>\n              </li></Link>\n              <Link to=\"/sort\"><li onClick={handleClick} id=\"quick-sort\" className={`nav-link ${active === 'quick-sort' ? 'active' : ''}`}>\n                <button>\n                  <i undefined=\"true\" className=\"bx bx-chevron-right icon\"></i>\n                  <span className=\"text nav-text\">Quick Sort</span>\n                </button>\n              </li></Link>\n              <Link to=\"/sort\"><li onClick={handleClick} id=\"heap-sort\" className={`nav-link ${active === 'heap-sort' ? 'active' : ''}`}>\n                <button>\n                  <i undefined=\"true\" className=\"bx bx-chevron-right icon\"></i>\n                  <span className=\"text nav-text\">Heap Sort</span>\n                </button>\n              </li></Link>\n\n            </ul>\n          </div>\n          <div className=\"bottom-content content\">\n\n            {/* { Was trying to add sound while sorting array} */}\n\n\n            {/* <div className=\"side-heading\">Sound</div> */}\n            {/* <li className=\"mode\">\n              <div className=\"moon-sun\">\n                <i undefined=\"true\" className=\"bx bx-volume-full icon sound-on\"></i>\n                <i undefined=\"true\" className=\"bx bx-volume-mute icon sound-off\"></i>\n              </div>\n              <span className=\"text mode-text nav-text\">{`${props.darkMode ? 'Light Mode' : 'Dark Mode'}`}</span>\n              <div onClick={props.toggle} className=\"toggle-switch\">\n                <span className=\"switch\"></span>\n              </div>\n            </li> */}\n\n\n            <div className=\"side-heading\">Theme</div>\n            <li className=\"mode\">\n              <div className=\"moon-sun\">\n                <i undefined=\"true\" className=\"bx bx-moon icon moon\"></i>\n                <i undefined=\"true\" className=\"bx bx-sun icon sun\"></i>\n              </div>\n              <span className=\"text mode-text nav-text\">{`${props.darkMode ? 'Light Mode' : 'Dark Mode'}`}</span>\n              <div onClick={props.toggle} className=\"toggle-switch\">\n                <span className=\"switch\"></span>\n              </div>\n            </li>\n            <div className=\"side-heading\">Contact</div>\n            <div className=\"contacts\">\n              <ul>\n                <li>\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://github.com/Muditb-21\"\n                  >\n                    <i undefined=\"true\" className=\"bx bxl-github\"></i>\n                  </a>\n                </li>\n                <li>\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://www.linkedin.com/in/mudit-bhanwar/\"\n                  >\n                    <i undefined=\"true\" className=\"bx bxl-linkedin\"></i>\n                  </a>\n                </li>\n                <li>\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"mailto:muditbhanwar@gmail.com\"\n                  >\n                    <i undefined=\"true\" className=\"bx bxl-gmail\" ></i>\n                  </a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React from 'react'\nimport './SortInfo.css'\n\nexport default function BubbleSort() {\n  return (\n    <div className='sort-info'>\n      <div className=\"sort-name\">\n        Name : Bubble Sort\n      </div>\n      {/* <div className=\"sort-time\">\n        Time Complexity : O(n<sup>2</sup>)\n\n      </div> */}\n    </div>\n  )\n}\n","import React from 'react'\nimport './SortInfo.css'\n\nexport default function InsertionSort() {\n  return (\n    <div>\n      <div className='sort-info'>\n        <div className=\"sort-name\">\n          Name : Insertion Sort\n        </div>\n        {/* <div className=\"sort-time\">\n          Time Complexity : O(n<sup>2</sup>)\n        </div> */}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport './SortInfo.css'\nexport default function SelectionSort() {\n  return (\n    <div>\n      <div className='sort-info'>\n        <div className=\"sort-name\">\n          Name : Selection Sort\n        </div>\n        {/* <div className=\"sort-time\">\n          Time Complexity : O(n<sup>2</sup>)\n        </div> */}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport './SortInfo.css'\nexport default function MergeSort() {\n  return (\n    <div>\n      <div className='sort-info'>\n        <div className=\"sort-name\">\n          Name : Merge Sort\n        </div>\n        {/* <div className=\"sort-time\">\n          Time Complexity : O(nlog(n))\n        </div> */}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport './SortInfo.css'\n\nexport default function BubbleSort() {\n    return (\n        <div className='sort-info'>\n            <div className=\"sort-name\">\n                Name : Quick Sort\n            </div>\n            {/* <div className=\"sort-time\">\n                Time Complexity : O(n<sup>2</sup>)\n\n            </div> */}\n\n        </div>\n    )\n}\n","import React from 'react'\nimport './SortInfo.css'\n\nexport default function BubbleSort() {\n    return (\n        <div className='sort-info'>\n            <div className=\"sort-name\">\n                Name : Heap Sort\n            </div>\n            {/* <div className=\"sort-time\">\n                Time Complexity : O(nlogn)\n            </div> */}\n        </div>\n    )\n}\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport \"./SortingPage.css\";\nimport BubbleSort from \"./BubbleSort\";\nimport InsertionSort from \"./InsertionSort\";\nimport SelectionSort from \"./SelectionSort\";\nimport MergeSort from \"./MergeSort\";\nimport QuickSort from \"./QuickSort\";\nimport HeapSort from \"./HeapSort\";\n\nexport default function SortingPage(props) {\n  const [array, setArray] = useState([]);\n  const [arraySize, setArraySize] = useState(50);\n  const [speed, setSpeed] = useState(\"1800\");\n  const sorting = useRef(false);\n  const sortingSpeed = useRef(\"300\");\n  const maxHeight = useRef(0);\n  const sortingPageMainHeight = useRef(0);\n  const arrayContainerWidth = useRef(0);\n  const inputMaxvalue = useRef(0);\n\n  const handleArraySizeSliderChange = (event) => {\n    setArraySize(Number(event.target.value));\n  };\n  const handleSortingSpeedSliderChange = (event) => {\n    sortingSpeed.current = event.target.value;\n    setSpeed(sortingSpeed.current);\n  };\n  const resetBarColors = useCallback(() => {\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\n    for (let i = 0; i < arrayBars.length; i++) {\n      const barStyle = arrayBars[i].style;\n      barStyle.backgroundColor = props.barkMode ? \"turquoise\" : \"#695cfe\";\n    }\n  }, []);\n\n  useEffect(() => {\n    //bug\n    if (sorting.current) sorting.current = false;\n    let buttonELe = document.querySelector(\"button:nth-child(2)\");\n    if (props.page === \"bubble-sort\") {\n      buttonELe.innerHTML = \"Bubble Sort\";\n    } else if (props.page === \"insertion-sort\") {\n      buttonELe.innerHTML = \"Insertion Sort\";\n    } else if (props.page === \"selection-sort\") {\n      buttonELe.innerHTML = \"Selection Sort\";\n    } else if (props.page === \"merge-sort\") {\n      buttonELe.innerHTML = \"Merge Sort\";\n    } else if (props.page === \"quick-sort\") {\n      buttonELe.innerHTML = \"Quick Sort\";\n    } else if (props.page === \"heap-sort\") {\n      buttonELe.innerHTML = \"Heap Sort\";\n    }\n\n    handlestopSorting();\n    resetArray();\n    resetBarColors();\n  }, [props.page]);\n\n  const highlightSortedBubble = useCallback(\n    (sortedIndex) => {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n\n      for (let i = sortedIndex; i < array.length; i++) {\n        const barStyle = arrayBars[i].style;\n        barStyle.backgroundColor = \"green\";\n      }\n    },\n    [array.length]\n  );\n  const highlightSortedInsertion = useCallback(\n    (sortedIndex) => {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n\n      for (let i = 0; i < sortedIndex; i++) {\n        const barStyle = arrayBars[i].style;\n        barStyle.backgroundColor = \"green\";\n      }\n    },\n    [array.length]\n  );\n\n  // Generate a new random array\n  const resetArray = useCallback(() => {\n    sorting.current = false;\n    const newArray = [];\n    maxHeight.current = 0;\n    for (let i = 0; i < arraySize; i++) {\n      let num = randomIntFromInterval(1, arraySize);\n      if (num > maxHeight.current) maxHeight.current = num;\n      newArray.push(num);\n    }\n    setArray(newArray);\n    resetBarColors();\n  }, [arraySize, resetBarColors]);\n\n  //reset Array after changing the arraySize\n  useEffect(() => {\n    sortingPageMainHeight.current =\n      document.querySelector(\".sortingPage-main\").clientHeight * 0.7;\n    arrayContainerWidth.current = document.querySelector(\n      \".array-container\"\n    ).clientWidth;\n    resetArray();\n    inputMaxvalue.current = arrayContainerWidth.current / 3;\n  }, [arraySize, resetArray]);\n\n  // heightMulFactor is used to scale the height of the bars\n  // maxHeight * heightMulFactor = sortingPageMainHeight\n  // heightMulFactor = sortingPageMainHeight / maxHeight\n  const heightMulFactor = sortingPageMainHeight.current / maxHeight.current;\n\n  //Width of array bar\n  const arrayBarWidth = arrayContainerWidth.current / arraySize;\n\n  // Generate a random integer within a range\n  const randomIntFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  // highlight sorted array\n  const highlightSorted = (low, high) => {\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\n    for (let i = low; i <= high; i++) {\n      const barStyle = arrayBars[i].style;\n      barStyle.backgroundColor = \"green\";\n    }\n  };\n\n  // Bubble Sort algorithm\n  const bubbleSort = useCallback(async () => {\n\n    sorting.current = true;\n    const arr = [...array];\n    const n = arr.length;\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j < n - i - 1; j++) {\n        if (sorting.current === false) {\n          // Stop the sorting process permanently\n          return;\n        }\n        // Highlight the two compared bars in red\n        highlightBars(j, j + 1, \"red\");\n        // Introduce a delay to slow down the sorting process\n        await new Promise((resolve) =>\n          setTimeout(resolve, 2000 - sortingSpeed.current)\n        );\n        if (arr[j] > arr[j + 1]) {\n          // Swap elements\n          let temp = arr[j];\n          arr[j] = arr[j + 1];\n          arr[j + 1] = temp;\n          // Swap the heights of the compared bars\n          swapHeights(j, j + 1);\n        }\n        // Reset the color of the compared bars to turquoise\n        highlightBars(j, j + 1, props.barkMode ? \"turquoise\" : \"#695cfe\");\n      }\n      // Highlight the sorted portion as green\n      highlightSortedBubble(n - i - 1);\n    }\n    setArray(arr);\n    sorting.current = false;\n  }, [array]);\n\n  //Insertion Sort algorithm\n  const insertionSort = useCallback(async () => {\n\n    if (sorting.current) return;\n    sorting.current = true;\n    const arr = [...array];\n    const n = arr.length;\n\n    for (let i = 1; i < n; i++) {\n      if (sorting.current === false) {\n        // Stop the sorting process permanently\n        return;\n      }\n\n      let key = arr[i];\n      let j = i - 1;\n      highlightBars(i, i, \"green\");\n      // Move elements of arr[0..i-1], that are greater than key,\n      // to one position ahead of their current position\n      while (j >= 0 && arr[j] > key) {\n        // Highlight the compared element in red\n        if (sorting.current === false) {\n          // Stop the sorting process permanently\n          return;\n        }\n        highlightBars(j, j + 1, \"red\");\n        highlightBars(i, i, \"green\");\n\n        await new Promise((resolve) =>\n          setTimeout(resolve, 2000 - sortingSpeed.current)\n        );\n        // Move the element to the right\n        arr[j + 1] = arr[j];\n        // Move the bar visually to the right\n        moveBar(j, j + 1);\n        highlightBars(j, j + 1, \"green\");\n        j--;\n      }\n      arr[j + 1] = key;\n    }\n    if (sorting.current) {\n      setArray(arr);\n    }\n    sorting.current = false;\n    return () => {\n      // Cleanup function\n      sorting.current = false;\n      // Cancel any ongoing processes or timers\n      // ...\n    };\n  }, [array]);\n\n  const moveBar = (barOneIdx, barTwoIdx) => {\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\n    const barOneStyle = arrayBars[barOneIdx].style;\n    const barTwoStyle = arrayBars[barTwoIdx].style;\n\n    const tempHeight = barOneStyle.height;\n    barOneStyle.height = barTwoStyle.height;\n    barTwoStyle.height = tempHeight;\n  };\n\n  // Selection Sort algorithm\n  const selectionSort = useCallback(async () => {\n\n    sorting.current = true;\n    const arr = [...array];\n    const n = arr.length;\n\n    for (let i = 0; i < n - 1; i++) {\n      if (sorting.current === false) {\n        return;\n      }\n      let minIndex = i;\n      for (let j = i + 1; j < n; j++) {\n        if (sorting.current === false) {\n          // Stop the sorting process permanently\n          return;\n        }\n        highlightBars(j, j, \"red\");\n        await new Promise((resolve) => setTimeout(resolve, 2000 - sortingSpeed.current));\n        highlightBars(j, j, \"#695cfe\");\n        if (arr[j] < arr[minIndex]) {\n          minIndex = j;\n        }\n      }\n      highlightBars(minIndex, minIndex, \"red\");\n      await swap(i, minIndex, arr);\n      highlightBars(minIndex, minIndex, \"#695cfe\");\n      highlightSortedInsertion(i);\n    }\n    highlightBars(n - 2, n - 1, \"green\");\n    setArray(arr);\n    sorting.current = false;\n  }, [array]);\n\n  const swap = (i, j, arr) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        let temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        setArray([...arr]);\n        resolve();\n      }, 2000 - sortingSpeed.current);\n    });\n  };\n\n  //Merge Sort algorithm\n  const mergeSort = useCallback(async (arr) => {\n\n    sorting.current = true;\n\n    const merge = async (arr, start, mid, end) => {\n      const leftArr = arr.slice(start, mid + 1);\n      const rightArr = arr.slice(mid + 1, end + 1);\n\n      let i = 0;\n      let j = 0;\n      let k = start;\n\n      while (i < leftArr.length && j < rightArr.length) {\n        if (sorting.current === false) {\n          // Stop the sorting process permanently\n          return;\n        }\n\n        // Highlight the two compared bars in red\n        highlightBars(start + i, mid + 1 + j, \"red\");\n\n        // Introduce a delay to slow down the sorting process\n        await new Promise((resolve) =>\n          setTimeout(resolve, 2000 - sortingSpeed.current)\n        );\n\n        highlightBars(start + i, mid + 1 + j, \"#695cfe\");\n\n        if (leftArr[i] <= rightArr[j]) {\n          arr[k] = leftArr[i];\n          setArray([...arr]);\n          highlightBars(i, k, \"green\");\n          i++;\n        } else {\n          arr[k] = rightArr[j];\n          setArray([...arr]);\n          highlightBars(j, k, \"green\");\n          j++;\n        }\n        k++;\n\n      }\n\n      while (i < leftArr.length) {\n        if (sorting.current === false) {\n          return;\n        }\n\n        arr[k] = leftArr[i];\n        setArray([...arr]);\n        highlightBars(k, i, \"green\");\n        i++;\n        k++;\n        await new Promise((resolve) =>\n          setTimeout(resolve, 2000 - sortingSpeed.current)\n        );\n      }\n\n      while (j < rightArr.length) {\n        if (sorting.current === false) {\n          return;\n        }\n\n        arr[k] = rightArr[j];\n        setArray([...arr]);\n        highlightBars(k, j, \"green\");\n        j++;\n        k++;\n\n        await new Promise((resolve) =>\n          setTimeout(resolve, 2000 - sortingSpeed.current)\n        );\n      }\n    };\n\n    const mergeSortRec = async (arr, start, end) => {\n      if (start < end) {\n        const mid = Math.floor((start + end) / 2);\n        await mergeSortRec(arr, start, mid);\n        await mergeSortRec(arr, mid + 1, end);\n        await merge(arr, start, mid, end);\n      }\n    };\n\n    const arrCopy = [...array]; // Copy the array using the spread operator\n\n    await mergeSortRec(arrCopy, 0, arrCopy.length - 1);\n\n    setArray(arrCopy);\n    sorting.current = false;\n  }, [array]);\n\n\n  // Quick Sort\n  const quickSort = useCallback(async () => {\n\n    sorting.current = true;\n    const arr = [...array];\n\n    const partitionLomuto = async (arr, low, high) => {\n\n      let pivot = arr[high];\n      let i = low - 1;\n      let j;\n      for (j = low; j <= high - 1; j++) {\n        highlightBars(j, high, \"red\");\n        if (sorting.current === false) {\n          // Stop the sorting process permanently\n          return;\n        }\n        await new Promise((resolve) =>\n          setTimeout(resolve, 2000 - sortingSpeed.current)\n        );\n        if (sorting.current === false) {\n          // Stop the sorting process permanently\n          return;\n        }\n        if (arr[j] < pivot) {\n          i++;\n          [arr[i], arr[j]] = [arr[j], arr[i]];\n          setArray([...arr]);\n          highlightBars(i, j, \"orange\");\n        }\n        highlightBars(j, high, \"#695cfe\");\n      }\n\n      [arr[i + 1], arr[high]] = [arr[high], arr[i + 1]];\n      setArray([...arr]);\n\n      return i + 1;\n    };\n\n    const sort = async (arr, low, high) => {\n      if (low < high) {\n        const pi = await partitionLomuto(arr, low, high);\n        if (pi < arr.length && pi >= 0) {\n          highlightBars(pi, pi, \"green\");\n        }\n        await sort(arr, low, pi - 1);\n        // highlightBars(pi, pi, \"green\");\n        await sort(arr, pi + 1, high);\n        // highlightBars(pi, high, \"greeen\");\n      }\n      else {\n        if (low >= 0 && low < arr.length) {\n          highlightBars(low, low, \"green\");\n        }\n        if (high >= 0 && high < arr.length) {\n          highlightBars(high, high, \"green\");\n        }\n      }\n\n      // Highlight the sorted portion\n      // if (sorting.current === true) {\n      //   // Stop the sorting process permanently\n      //   highlightSorted(low, high);\n      // }\n\n    };\n\n    await sort(arr, 0, arr.length - 1);\n    setArray(arr);\n    sorting.current = false;\n  }, [array, highlightBars, highlightSorted]);\n\n\n\n  // Heap Sort\n  const heapSort = useCallback(async () => {\n    sorting.current = true;\n    const arr = [...array];\n    const n = arr.length;\n\n    const heapify = async (arr, n, i) => {\n      if (sorting.current === false) {\n        // Stop the sorting process permanently\n        return;\n      }\n      let largest = i;\n      let left = 2 * i + 1;\n      let right = 2 * i + 2;\n\n\n      if (left < n && arr[left] > arr[largest]) {\n        largest = left;\n      }\n\n      if (right < n && arr[right] > arr[largest]) {\n        largest = right;\n      }\n\n      if (largest !== i) {\n        highlightBars(i, largest, \"red\");\n        await new Promise((resolve) =>\n          setTimeout(resolve, 2000 - sortingSpeed.current)\n        );\n        [arr[i], arr[largest]] = [arr[largest], arr[i]];\n        setArray([...arr]);\n        highlightBars(i, largest, \"#695cfe\");\n        await heapify(arr, n, largest);\n      }\n    };\n\n    const buildHeap = async (arr, n) => {\n      for (let i = Math.floor(n / 2) - 1; i >= 0; i--) {\n        await heapify(arr, n, i);\n      }\n    };\n\n    await buildHeap(arr, n);\n\n    for (let i = n - 1; i > 0; i--) {\n      if (sorting.current === false) {\n        // Stop the sorting process permanently\n        return;\n      }\n      highlightBars(0, i, \"green\");\n      await new Promise((resolve) =>\n        setTimeout(resolve, 2000 - sortingSpeed.current)\n      );\n      [arr[0], arr[i]] = [arr[i], arr[0]];\n      setArray([...arr]);\n      await heapify(arr, i, 0);\n    }\n\n    setArray(arr);\n    sorting.current = false;\n  }, [array, highlightBars]);\n\n\n\n\n\n\n  const highlightBars = (barOneIdx, barTwoIdx, color) => {\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\n    const barOneStyle = arrayBars[barOneIdx].style;\n    const barTwoStyle = arrayBars[barTwoIdx].style;\n    barOneStyle.backgroundColor = color;\n    barTwoStyle.backgroundColor = color;\n  };\n\n  const swapHeights = (barOneIdx, barTwoIdx) => {\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\n    const barOneStyle = arrayBars[barOneIdx].style;\n    const barTwoStyle = arrayBars[barTwoIdx].style;\n\n    const tempHeight = barOneStyle.height;\n    barOneStyle.height = barTwoStyle.height;\n    barTwoStyle.height = tempHeight;\n  };\n  const handleGenerateNewArray = () => {\n    if (sorting.current) return; // Don't generate a new array while sorting\n    sorting.current = false;\n    resetArray();\n  };\n\n\n\n  const handlestopSorting = () => {\n    if (sorting.current) {\n      sorting.current = false;\n    }\n  };\n\n  const handleSortClick = () => {\n    if (sorting.current) return;\n    if (props.page === \"bubble-sort\") {\n      bubbleSort();\n    } else if (props.page === \"insertion-sort\") {\n      insertionSort();\n    } else if (props.page === \"selection-sort\") {\n      selectionSort();\n    } else if (props.page === \"merge-sort\") {\n      mergeSort();\n    } else if (props.page === \"quick-sort\") {\n      quickSort();\n    }\n    else if (props.page === \"heap-sort\") {\n      heapSort();\n    }\n  };\n\n  return (\n    <div className=\"sortingPage-main\">\n      <div className=\"sort-settings\">\n        <div className=\"array-size\">\n          <label htmlFor=\"arraySize\">Array Size</label>\n          <input\n            id=\"arraySize\"\n            type=\"range\"\n            min=\"5\"\n            max={`${inputMaxvalue.current}`}\n            value={arraySize}\n            onChange={handleArraySizeSliderChange}\n          />\n          <span>{arraySize}</span>\n        </div>\n        <div className=\"sorting-speed\">\n          <label htmlFor=\"sortingSpeed\">Sorting Speed</label>\n          <input\n            id=\"sortingSpeed\"\n            type=\"range\"\n            min=\"0\"\n            max=\"2000\"\n            value={speed}\n            onChange={handleSortingSpeedSliderChange}\n          />\n          <span>{speed}</span>\n        </div>\n      </div>\n      <div className=\"array-container\">\n        <div className=\"array-bar-container\">\n          {array.map((value, index) => (\n            <div\n              className=\"array-bar\"\n              key={index}\n              style={{\n                height: `${value * heightMulFactor}px`,\n                width: `${arrayBarWidth}px`,\n              }}\n            ></div>\n          ))}\n        </div>\n      </div>\n      <div className=\"controls\">\n        <button onClick={handleGenerateNewArray}>Generate New Array</button>\n        <button onClick={handleSortClick}>Bubble Sort</button>\n        <button onClick={handlestopSorting}>Stop</button>\n      </div>\n      <div className=\"sort-info\">\n        {props.page === \"bubble-sort\" ? <BubbleSort /> : null}\n        {props.page === \"selection-sort\" ? <SelectionSort /> : null}\n        {props.page === \"insertion-sort\" ? <InsertionSort /> : null}\n        {props.page === \"merge-sort\" ? <MergeSort /> : null}\n        {props.page === \"quick-sort\" ? <QuickSort /> : null}\n        {props.page === \"heap-sort\" ? <HeapSort /> : null}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport \"./HomePage.css\";\n\nexport default function HomePage() {\n  const quesRef = useRef([]);\n  const pRef = useRef([]);\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add(\"show\");\n          } else {\n            entry.target.classList.remove(\"show\");\n          }\n        });\n      },\n      { threshold: 0.9 }\n    );\n\n    quesRef.current.forEach((ques) => observer.observe(ques));\n    pRef.current.forEach((p) => observer.observe(p));\n\n    return () => observer.disconnect();\n  }, []);\n\n  return (\n    <div className=\"homepage-main\">\n      <div className=\"page-1 page\">\n        <div className=\"homepage-bg\"></div>\n        <div className=\"scramble-container\">\n          <div className=\"scramble-text\">Sorting Visualizer</div>\n        </div>\n      </div>\n      <div className=\"page-2 page\">\n        <div className=\"box left\">\n          <div className=\"ques-ans\">\n            {/* Ques-1 */}\n            <section className=\"ques\" ref={(el) => (quesRef.current[0] = el)}>\n              What is Sorting?\n            </section>\n            <section className=\"ans\">\n              <p ref={(el) => (pRef.current[0] = el)}>\n                <strong>Sorting</strong> refers to arranging elements in a\n                particular order, either <em>ascending or descending</em>.\n              </p>\n            </section>\n            {/* Ques-2 */}\n            <section className=\"ques\" ref={(el) => (quesRef.current[1] = el)}>\n              Why Sorting?\n            </section>\n            <section className=\"ans\">\n              <p ref={(el) => (pRef.current[1] = el)}>\n                Sorting elements is a fundamental operation in computer science\n                and data processing for several reasons:\n              </p>\n\n              <p ref={(el) => (pRef.current[2] = el)}>\n                1. <strong>Organization</strong>: Sorting allows us to arrange\n                elements in a specific order, such as ascending or descending.\n              </p>\n\n              <p ref={(el) => (pRef.current[3] = el)}>\n                2. <strong>Searching</strong>: Sorted data can be searched more\n                quickly and effectively.\n              </p>\n\n              <p ref={(el) => (pRef.current[4] = el)}>\n                3. <strong>Data Analysis</strong>: Sorting is often a\n                prerequisite for performing various data analysis tasks.\n              </p>\n\n              <p ref={(el) => (pRef.current[5] = el)}>\n                4. <strong>Data Presentation</strong>: Sorted data is easier to\n                comprehend and present.\n              </p>\n\n              <p ref={(el) => (pRef.current[6] = el)}>\n                5. <strong>Data Deduplication</strong>: Sorting can help\n                identify and remove duplicate elements from a dataset.{\" \"}\n              </p>\n\n              <p ref={(el) => (pRef.current[7] = el)}>\n                6. <strong>Algorithm Design</strong>: Sorting is a crucial\n                building block for developing more complex algorithms. Many\n                advanced algorithms and structures heavily rely on sorting\n                operations as part of their implementation or optimization\n                steps.\n              </p>\n            </section>\n          </div>\n        </div>\n        <div className=\"box right\">\n          <div className=\"sort-types-heading\">Types of Sorting</div>\n          <div className=\"sort-types\">\n            <div className=\"sort-types-container\">\n              <div className=\"sort-row infinite-scroll\">\n                <div className=\"sort-type\">Bubble</div>\n                <div className=\"sort-type\">Selection</div>\n                <div className=\"sort-type\">Insertion</div>\n              </div>\n              <div className=\"sort-row infinite-scroll\">\n                <div className=\"sort-type\">Merge</div>\n                <div className=\"sort-type\">Quick</div>\n                <div className=\"sort-type\">Heap</div>\n              </div>\n              <div className=\"sort-row infinite-scroll\">\n                <div className=\"sort-type\">Radix</div>\n                <div className=\"sort-type\">Counting</div>\n                <div className=\"sort-type\">Bucket</div>\n              </div>\n              <div className=\"sort-row infinite-scroll\">\n                <div className=\"sort-type\">Shell</div>\n                <div className=\"sort-type\">Cocktail Shaker</div>\n                <div className=\"sort-type\">Comb</div>\n              </div>\n              <div className=\"sort-row infinite-scroll\">\n                <div className=\"sort-type\">Gnome</div>\n                <div className=\"sort-type\">Cycle</div>\n                <div className=\"sort-type\">Odd-Even</div>\n              </div>\n              <div className=\"sort-row infinite-scroll\">\n                <div className=\"sort-type\">Pancake</div>\n                <div className=\"sort-type\">Stooge</div>\n                <div className=\"sort-type\">Tree</div>\n              </div>\n              <div className=\"sort-row infinite-scroll\">\n                <div className=\"sort-type\">Bubble</div>\n                <div className=\"sort-type\">Selection</div>\n                <div className=\"sort-type\">Insertion</div>\n              </div>\n              <div className=\"sort-row infinite-scroll\">\n                <div className=\"sort-type\">Merge</div>\n                <div className=\"sort-type\">Quick</div>\n                <div className=\"sort-type\">Heap</div>\n              </div>\n              <div className=\"sort-row infinite-scroll\">\n                <div className=\"sort-type\">Radix</div>\n                <div className=\"sort-type\">Counting</div>\n                <div className=\"sort-type\">Bucket</div>\n              </div>\n              <div className=\"sort-row infinite-scroll\">\n                <div className=\"sort-type\">Shell</div>\n                <div className=\"sort-type\">Cocktail Shaker</div>\n                <div className=\"sort-type\">Comb</div>\n              </div>\n              <div className=\"sort-row infinite-scroll\">\n                <div className=\"sort-type\">Gnome</div>\n                <div className=\"sort-type\">Cycle</div>\n                <div className=\"sort-type\">Odd-Even</div>\n              </div>\n              <div className=\"sort-row infinite-scroll\">\n                <div className=\"sort-type\">Pancake</div>\n                <div className=\"sort-type\">Stooge</div>\n                <div className=\"sort-type\">Tree</div>\n              </div>\n              <div className=\"sort-row infinite-scroll\">\n                <div className=\"sort-type\">Pancake</div>\n                <div className=\"sort-type\">Stooge</div>\n                <div className=\"sort-type\">Tree</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"time-complexity\">\n            <section className=\"ques\" ref={(el) => (quesRef.current[2] = el)}>\n              What is Time Complexity?\n            </section>\n            <section className=\"ans\">\n              <p ref={(el) => (pRef.current[8] = el)}>\n                Time complexity is a measure of the amount of time taken by an algorithm to run as a function of the input size. It describes the relationship between the input size and the time taken to execute an algorithm, providing an estimate of the algorithm's efficiency.\n              </p>\n            </section>\n\n          </div>\n        </div>\n      </div>\n      <div className=\"page-3 page\">\n        ~ Mudit Bhanwar\n      </div>\n    </div>\n  );\n}\n","import React  from 'react';\nimport './MainPage.css';\nimport SortingPage from './SortingPage';\nimport HomePage from './HomePage';\nimport { Routes , Route } from 'react-router-dom';\n\nexport default function MainPage(props) {\n  return (\n    <div className='mainpage'>\n      <Routes>\n        <Route path=\"*\" element={<HomePage/>} /> {/* Default route */}\n        <Route exact path='/' element={<HomePage/>}/>\n        <Route path='/sort' element={<SortingPage page = {props.page} darkMode={props.darkMode}/> }/>\n      </Routes>\n    </div>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Sidebar from './components/Sidebar';\nimport MainPage from './components/MainPage';\nimport { useState } from 'react';\n\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  const [page, setPage] = useState('home');\n  const toggleMode = () => {\n    setIsDarkMode(!isDarkMode);\n  }\n  return (\n    <div className={`App ${isDarkMode ? 'dark' : ''}`}>\n      <Navbar darkMode={isDarkMode} />\n      <Sidebar darkMode={isDarkMode} toggle={toggleMode} undefined=\"true\" setPage={setPage} />\n      <MainPage page={page} darkMode={isDarkMode} />\n      {/* <h1 >bus kar bsdk</h1>\n      <h1>working on heap sort</h1> */}\n    </div >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  \n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}